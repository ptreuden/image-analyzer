{"version":3,"sources":["components/SignIn/SignIn.js","components/Register/Register.js","outerBrain.svg","gears.svg","components/Permission/Permission.js","brainDataIcon.svg","components/Navigation/Navigation.js","components/Personalized/Personalized.js","components/Greeting/Greeting.js","components/Input/Input.js","components/Samples/Samples.js","components/Main/Main.js","components/ImageOutput/ImageOutput.js","components/Themes/Themes.js","components/Output/Output.js","components/About/About.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","changePermission","changeUser","currentUser","setPreviousImage","useState","email","setEmail","password","setPassword","checkUserInfo","isInvalid","hasSymbol","includes","length","push","user","fetch","method","headers","body","JSON","stringify","then","response","json","data","id","username","last_entry","entries","alert","sendUserInfo","className","htmlFor","type","name","onChange","e","target","value","onClick","href","Register","setUsername","passwordConfirm","setPasswordConfirm","newUser","Permission","permissionScreen","setPermissionScreen","changePermissionScreen","src","outerBrain","alt","gears","Navigation","brain","console","log","catch","err","Personalized","previousImage","checkUrl","setUrlToRender","urlHandler","document","getElementById","setTimeout","Greeting","Input","clearField","checkToAnalyze","imageValid","placeholder","Samples","beachPic","cityPic","dogPic","Main","showSample","ImageOutput","imageToRender","Themes","showThemes","themeNamesValues","themeName1","concept","themeValue1","toPrecision","themeName2","themeValue2","themeName3","themeValue3","themeName4","themeValue4","themeName5","themeValue5","style","width","Output","About","aboutShowing","setAboutShowing","App","setImageValid","setCurrentUser","currentImage","setCurrentImage","urlToRender","setShowThemes","setThemeNamesValues","clearTheme","image","mainInputDiv","scrollIntoView","behavior","sendPic","url","windowWidth","window","innerWidth","outputContainer","updateEntries","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.45f77309.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../Permission/Permission.css';\n\n\nconst SignIn = ({ changePermission, changeUser, currentUser, setPreviousImage }) => {\n\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n\n  // send inputted info to server/db\n  const sendUserInfo = () => {\n    let user = {\n      email: email,\n      password: password\n    }\n    fetch('https://gentle-brook-34978.herokuapp.com/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(user)\n    })\n    .then(response => response.json())\n    .then(data => {\n      // console.log(data);\n      if(data.email) {\n        setEmail('');\n        setPassword('');\n        let { id, username, last_entry, entries } = data;\n        changeUser({id: id, username: username, last_entry: last_entry, entries: entries});\n        if(last_entry) {\n          setPreviousImage(last_entry);\n        }\n\n      } else {\n        alert('Login information not correct.  Please try again.');\n        setEmail('');\n        setPassword('');\n      }\n    })\n  }\n\n  // first do a basic validation for testing purposes, then up to sendUserInfo()\n  const checkUserInfo = () => {\n    let isInvalid = [];\n    let hasSymbol = email.includes('@');\n    if(email.length < 5 || !hasSymbol) {\n      isInvalid.push('email ');\n    }\n    if(password.length < 5) {\n      isInvalid.push('password ');\n    }\n    if(isInvalid.length === 0) {\n      sendUserInfo();\n    } else {\n      alert(`Please try again using a valid ${isInvalid}`)\n      setEmail('');\n      setPassword('');\n    }\n  }\n\n  return(\n    <main className=\"main pa3 black-80\">\n      <div className=\"form measure center\" >\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n          <legend className=\"f4 fw5 ph0 mh0\">SIGN IN</legend>\n          <div className=\"mt3\">\n            <label className=\"db fw5 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n            <input className=\"email pa2 input-reset ba b--mid-gray bg-transparent w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" onChange={(e) => setEmail(e.target.value)} value={email}/>\n          </div>\n          <div className=\"mv3\">\n            <label className=\"db fw5 lh-copy f6\" htmlFor=\"password\">Password</label>\n            <input className=\"password b pa2 input-reset ba b--mid-gray bg-transparent w-100\" type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} value={password}/>\n          </div>\n        </fieldset>\n        <div className=\"tc\">\n          <input className=\"submit-button b ph3 pv2 input-reset ba b--mid-gray pointer f6 dib black-80\" type=\"submit\" onClick={(e) => checkUserInfo()}/>\n        </div>\n        <div className=\" mt3 tc\">\n          <a href=\"#0\" className=\"f6 link dim black-80 db\" onClick={(e) => changeUser({...currentUser, username: 'Guest'})}>Use as Guest</a>\n        </div>\n        <div className=\"mt1 tc\">\n          <a href=\"#0\" className=\"f6 link dim black-80 db\" onClick={(e) => changePermission('register')}>Register New Account</a>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default SignIn;\n","import React, { useState } from 'react';\nimport '../Permission/Permission.css';\n\n\nconst Register = ({ changePermission, changeUser, currentUser }) => {\n\n  const [ username, setUsername ] = useState('');\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ passwordConfirm, setPasswordConfirm ] = useState('');\n\n  // send inputted info to server/db\n  const sendUserInfo = () => {\n    let newUser = {\n      username: username,\n      email: email,\n      password: password\n    }\n    fetch('https://gentle-brook-34978.herokuapp.com/register', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(newUser)\n    })\n    .then(response => response.json())\n    .then(data => {\n      // console.log(data);\n\n      if(data === 'Cannot register - heroku') {\n        alert('Email already registered. Please try again. Heroku');\n        setUsername('');\n        setEmail('');\n        setPassword('');\n      } else if (data === 'Invalid register data') {\n        alert('Invalid register information. Please try again.')\n        setUsername('');\n        setEmail('');\n        setPassword('');\n      } else {\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        let { id, username, last_entry, entries } = data;\n        changeUser({id: id, username: username, last_entry: last_entry, entries: entries});\n      }\n    })\n  }\n\n  // first do a basic validation for testing purposes, then up to sendUserInfo()\n  const checkUserInfo = () => {\n\n    let isInvalid = [];\n    if(username.length < 3 || username === 'Guest') {\n      isInvalid.push('username ');\n    }\n    let hasSymbol = email.includes('@');\n    if(email.length < 5 || !hasSymbol) {\n      isInvalid.push('email ');\n    }\n    if(password.length < 5 || password !== passwordConfirm) {\n      isInvalid.push('password ');\n    }\n    if(isInvalid.length === 0) {\n      sendUserInfo();\n      setUsername('');\n      setEmail('');\n      setPassword('');\n      setPasswordConfirm('');\n    } else {\n      alert(`It looks like there was a problem with your ${isInvalid}. Please try again`);\n      setUsername('');\n      setEmail('');\n      setPassword('');\n      setPasswordConfirm('');\n    }\n  }\n\n  return(\n    <main className=\"main pa3 black-80\">\n      <div className=\"form measure center\" >\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n          <legend className=\"f4 fw5 ph0 mh0\">REGISTER NEW ACCOUNT</legend>\n          <div className=\"mv3\">\n            <label className=\"db fw5 lh-copy f6\" htmlFor=\"username\">Username</label>\n            <input className=\"register-username pa2 input-reset ba b--mid-gray bg-transparent w-100\" type=\"text\" name=\"username\" id=\"username\" onChange={(e) => setUsername(e.target.value)} value={username}/>\n          </div>\n          <div className=\"mv3\">\n            <label className=\"db fw5 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n            <input className=\"email pa2 input-reset ba b--mid-gray bg-transparent w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" onChange={(e) => setEmail(e.target.value)} value={email}/>\n          </div>\n          <div className=\"mv3\">\n            <label className=\"db fw5 lh-copy f6\" htmlFor=\"password\">Password</label>\n            <input className=\"password b pa2 input-reset ba b--mid-gray bg-transparent w-100\" type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} value={password}/>\n          </div>\n          <div className=\"mv3\">\n            <label className=\"db fw5 lh-copy f6\" htmlFor=\"password\">Confirm Password</label>\n            <input className=\"password b pa2 input-reset ba b--mid-gray bg-transparent w-100\" type=\"password\" name=\"password\" id=\"passwordConfirm\" onChange={(e) => setPasswordConfirm(e.target.value)} value={passwordConfirm}/>\n          </div>\n        </fieldset>\n        <div className=\"tc\">\n          <input className=\"submit-button b ph3 pv2 input-reset ba b--mid-gray pointer f6 dib\" type=\"submit\" onClick={(e) => checkUserInfo()}/>\n        </div>\n        <div className=\" mt3 tc\">\n          <a href=\"#0\" className=\"f6 link dim black-80 db\" onClick={(e) => changeUser({...currentUser, username: 'Guest'})}>Use as Guest</a>\n        </div>\n        <div className=\"mt1 tc\">\n          <a href=\"#0\" className=\"f6 link dim black-80 db\" onClick={(e) => changePermission('signin')}>Sign In With Account</a>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Register;\n","export default __webpack_public_path__ + \"static/media/outerBrain.5f027ec1.svg\";","export default __webpack_public_path__ + \"static/media/gears.45cb39f0.svg\";","import React, { useState } from 'react';\nimport SignIn from '../SignIn/SignIn';\nimport Register from '../Register/Register';\nimport outerBrain from '../../outerBrain.svg';\nimport gears from '../../gears.svg';\n\n\nconst Permission = ({ changeUser, currentUser, setPreviousImage }) => {\n\n  const [ permissionScreen, setPermissionScreen ] = useState('signin');\n  const changePermissionScreen = (value) => {\n    setPermissionScreen(value);\n  }\n\n  return(\n    <div className='permission-container' id='permission-container'>\n      <div className=\"permission-logo\">\n        <div className='brain-image-container'>\n          <img src={outerBrain} alt='brain icon' className='outer-brain'/>\n          <img src={gears} alt='gear icon' className='gears'/>\n        </div>\n        <h2>IMAGE</h2>\n        <h2>ANALYZER</h2>\n      </div>\n      {\n        permissionScreen === 'signin' ?\n        <SignIn changePermission={changePermissionScreen} changeUser={changeUser} currentUser={currentUser} setPreviousImage={setPreviousImage}/>\n        :\n        <Register changePermission={changePermissionScreen} changeUser={changeUser} currentUser={currentUser}/>\n      }\n    </div>\n  );\n}\n\nexport default Permission;\n","export default __webpack_public_path__ + \"static/media/brainDataIcon.e27eb040.svg\";","import React from 'react';\nimport brain from '../../brainDataIcon.svg'\nimport './Navigation.css';\n\n\nconst Navigation = ({ changeUser, currentUser }) => {\n\n  // when not 'guest', send user's last entry to server and db, then sign out to default user\n  const signOut = (user) => {\n    fetch('https://gentle-brook-34978.herokuapp.com/signout', {\n      method: 'put',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({id: user.id, last_entry: user.last_entry })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n    })\n    .catch(err => console.log('signout did not work'));\n    changeUser({ id: 0, username: '', last_entry: '', entries: 0});\n  }\n\n  return(\n    <div className='navigation'>\n      <div className='logo-container'>\n        <img src={brain} alt='brain icon'/>\n      </div>\n      {\n        currentUser.username === 'Guest' ?\n        <div className='sign-out'>\n          <a href=\"#1\" onClick={(e) => changeUser({ id: 0, username: '', last_entry: '', entries: 0})}>ACCOUNT SIGN IN</a>\n        </div>\n        :\n        <div className='sign-out'>\n          <a href=\"#1\" onClick={(e) => signOut(currentUser)}>SIGN OUT</a>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './Personalized.css';\n\n\nconst Personalized = ({ user, previousImage, checkUrl, setUrlToRender }) => {\n\n  // setting name display on screen to not say 'Guest', otherwise set it to variable\n  let { username } = user;\n  if(username === 'Guest') {\n    username = '';\n  }\n\n  const urlHandler = (value) => {\n    let urlInput = document.getElementById('url-input');\n    urlInput.value = value;\n    setUrlToRender(value);\n    setTimeout(() => {\n        checkUrl(value);\n    }, 100);\n  }\n\n  return(\n     <div className='personalized-container'>\n      {\n        user.username === 'Guest' ?\n          <div>\n            <h2>Your last analyzed image was:</h2>\n            <img src={previousImage} alt='pre' onClick={(e) => urlHandler(previousImage)}/>\n          </div>\n          :\n          <div>\n            <h2>Hello <span className='username'>{username}</span>.</h2><h2>Your last analyzed image was:</h2>\n            <img src={previousImage} alt='pre' onClick={(e) => urlHandler(previousImage)}/>\n          </div>\n      }\n     </div>\n  );\n}\n\nexport default Personalized;\n","import React from 'react';\nimport './Greeting.css';\nimport Personalized from '../Personalized/Personalized';\n\n\nconst Greeting = ({ user, previousImage, checkUrl, setUrlToRender }) => {\n\n  // will check if new user/guest, user with no previous entries, or user with previous entries\n  return(\n    <div className='greeting-container'>\n\n    {\n      user.entries === 0 ?\n      <div>\n        {\n          user.username === 'Guest' ?\n          <h2>Complete your image analysis below.</h2>\n          :\n          <h2>{`Hello ${user.username}, complete your image analysis below.`}</h2>\n        }\n      </div>\n      :\n      (\n        previousImage !== '' ?\n        <Personalized user={user} previousImage={previousImage} checkUrl={checkUrl} setUrlToRender={setUrlToRender}/>\n        :\n        <div>\n        {\n          user.username === 'Guest' ?\n          <h2>Complete your image analysis below.</h2>\n          :\n          <h2>{`Hello ${user.username}, complete your image analysis below.`}</h2>\n        }\n        </div>\n      )\n    }\n    </div>\n  );\n}\n\nexport default Greeting;\n","import React from 'react';\nimport './Input.css';\n\n\nconst Input = ({ checkUrl, clearField, checkToAnalyze, setUrlToRender, imageValid }) => {\n\n  const urlHandler = (value) => {\n    setUrlToRender(value);\n    setTimeout(() => {\n        checkUrl(value);\n    }, 150);\n  }\n\n  return(\n    <div className='input-container'>\n      <input id='url-input' type='text' name='url' placeholder='Enter image address' onChange={(e) => urlHandler(e.target.value)} />\n      <button type='button' onClick={() => checkToAnalyze()} className='input-button'>Analyze</button>\n      <div className='input-clear'>\n        <p onClick={() => clearField()}>Clear</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport './Samples.css';\n\n\nconst Samples = ({ checkUrl, setUrlToRender }) => {\n\n  // sample image addresses for display\n  const beachPic = 'https://images.unsplash.com/photo-1520520731457-9283dd14aa66?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NjF8fGJlYWNofGVufDB8MHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60';\n\n  const cityPic = 'https://images.unsplash.com/photo-1621251401027-432cd149a00c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NzR8fGNpdHl8ZW58MHwwfDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60';\n\n  const dogPic = 'https://images.unsplash.com/photo-1559355946-519a96b93456?ixid=MnwxMjA3fDB8MHxzZWFyY2h8ODR8fGRvZ3xlbnwwfDB8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60';\n\n  const urlHandler = (value) => {\n    let urlInput = document.getElementById('url-input');\n    urlInput.value = value;\n    setUrlToRender(value);\n    setTimeout(() => {\n        checkUrl(value);\n    }, 100);\n  }\n\n  return(\n    <div className='samples-container'>\n      <div className='samples-text-container'>\n        <p>No image?  Try these samples:</p>\n      </div>\n      <div className='samples-images-container'>\n        <img src={beachPic} alt ='beach' onClick={() => urlHandler(beachPic)}/>\n        <img src={cityPic} alt='city' onClick={() => urlHandler(cityPic)}/>\n        <img src={dogPic} alt='dog' onClick={() => urlHandler(dogPic)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Samples;\n","import React from 'react';\nimport './Main.css';\nimport Input from '../../components/Input/Input';\nimport Samples from '../../components/Samples/Samples';\n\n\nconst Main = ({ checkUrl, clearField, showSample, checkToAnalyze, setUrlToRender, imageValid }) => {\n  return(\n\n    <div>\n      <div className='main-buffer' id='main-buffer'>\n        \n      </div>\n      <div className='main-container' id='main-container'>\n        <h3>ANALYZE AN IMAGE</h3>\n        <Input checkUrl={checkUrl} clearField={clearField} checkToAnalyze={checkToAnalyze} setUrlToRender={setUrlToRender} imageValid={imageValid}/>\n        <Samples checkUrl={checkUrl} setUrlToRender={setUrlToRender} />\n      </div>\n    </div>\n\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport './ImageOutput.css';\n\n\nconst ImageOutput = ({ imageValid, imageToRender }) => {\n  return(\n    <div className={`imageOutput-container ${imageValid ? 'visible' : 'hidden'}`}>\n      <h3>IMAGE</h3>\n      {\n        imageValid ?\n        <div className='imageOutput-image'>\n          <img id='imageShowing' className={'showImage'} src={imageToRender} alt='rendered' />\n        </div>\n        :\n        <div className='imageOutput-image'>\n          <img id='imageShowing' className={'hideImage'} src={imageToRender} alt='hidden' />\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default ImageOutput;\n","import React from 'react';\nimport './Themes.css';\n\n// optional spinner gif for loading\n// import spinnerGif from '../../spinnerGif.gif';\n\n\nconst Themes = ({ showThemes, imageValid, themeNamesValues }) => {\n\n  // get themesNamesValues array, assign a 2-digit percentage\n  const themeName1 = themeNamesValues[0].concept;\n  const themeValue1 = themeNamesValues[0].value.toPrecision(2) * 100;\n  const themeName2 = themeNamesValues[1].concept;\n  const themeValue2 = themeNamesValues[1].value.toPrecision(2) * 100;\n  const themeName3 = themeNamesValues[2].concept;\n  const themeValue3 = themeNamesValues[2].value.toPrecision(2) * 100;\n  const themeName4 = themeNamesValues[3].concept;\n  const themeValue4 = themeNamesValues[3].value.toPrecision(2) * 100;\n  const themeName5 = themeNamesValues[4].concept;\n  const themeValue5 = themeNamesValues[4].value.toPrecision(2) * 100;\n\n  return(\n    <div className={`themes-container ${(showThemes && imageValid) ? 'visible' : 'hidden'}`}>\n      <h3>THEMES</h3>\n      <div>\n        <div className='themes-data'>\n          <div className='theme theme1'>\n            <p className='theme-text theme-text1'>{themeName1}</p>\n            <div className='theme-bar-container'>\n              <div className='theme-bar theme-bar1' style={{width: (themeValue1 / 1.15) + '%'}}></div>\n              <div className='theme-percentage theme-percentage1'>\n                <p>{themeValue1}%</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='themes-data'>\n          <div className='theme theme2'>\n            <p className='theme-text theme-text2'>{themeName2}</p>\n            <div className='theme-bar-container'>\n              <div className='theme-bar theme-bar2' style={{width: (themeValue2 / 1.15) + '%'}}></div>\n              <div className='theme-percentage theme-percentage2'>\n                <p>{themeValue2}%</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='themes-data'>\n          <div className='theme theme3'>\n            <p className='theme-text theme-text3'>{themeName3}</p>\n            <div className='theme-bar-container'>\n              <div className='theme-bar theme-bar3' style={{width: (themeValue3 / 1.15) + '%'}}></div>\n              <div className='theme-percentage theme-percentage3'>\n                <p>{themeValue3}%</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='themes-data'>\n          <div className='theme theme4'>\n            <p className='theme-text theme-text4'>{themeName4}</p>\n            <div className='theme-bar-container'>\n              <div className='theme-bar theme-bar4' style={{width: (themeValue4 / 1.15) + '%'}}></div>\n              <div className='theme-percentage theme-percentage4'>\n                <p>{themeValue4}%</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='themes-data'>\n          <div className='theme theme5'>\n            <p className='theme-text theme-text5'>{themeName5}</p>\n            <div className='theme-bar-container'>\n              <div className='theme-bar theme-bar5' style={{width: (themeValue5 / 1.15) + '%'}}></div>\n              <div className='theme-percentage theme-percentage5'>\n                <p>{themeValue5}%</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Themes;\n","import React from 'react';\nimport ImageOutput from '../ImageOutput/ImageOutput';\nimport Themes from '../Themes/Themes';\nimport './Output.css';\n\n\nconst Output = ({ imageValid, imageToRender, showThemes, themeNamesValues }) => {\n  return(\n    <div className='output-container' id='output-container'>\n      <ImageOutput imageValid={imageValid} imageToRender={imageToRender}/>\n      <Themes showThemes={showThemes} imageValid={imageValid} themeNamesValues={themeNamesValues}/>\n    </div>\n  );\n}\n\nexport default Output;\n","import React, { useState } from 'react';\nimport './About.css';\n\nconst About = () => {\n\n  const [ aboutShowing, setAboutShowing ] = useState(false);\n\n  return(\n    <div className={`about-container ${aboutShowing ? 'about-showing' : 'about-hidden'}`}>\n      <div className='about-content'>\n          <div className='about-tab' onClick={(e) => setAboutShowing(!aboutShowing)}>\n          {\n            aboutShowing ?\n            <p>x</p>\n              :\n            <p>?</p>\n          }\n          </div>\n          <div className='about-text-container'>\n            <div className='about-details'>\n              <p className='about-text'>This image analyzer uses the <a href='https://www.clarifai.com/' target='_blank'>Clarifai</a> API to garner data about inputted images.  Then, through a custom algorithm, this page displays five themes and respective confidence levels in a visual fashion.</p>\n              <p className='about-text'>Although this page is simply for demonstration, the generated information could be applied in many ways, including the creation of automatic tags of user uploaded images.</p>\n              <p className='about-text-unsplash'>Sample images from <a href='https://unsplash.com/' target='_blank'>Unsplash.com</a></p>\n            </div>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useState } from 'react';\nimport Permission from './components/Permission/Permission';\nimport Navigation from './components/Navigation/Navigation';\nimport Greeting from './components/Greeting/Greeting';\nimport Main from './components/Main/Main';\nimport Output from './components/Output/Output';\nimport About from './components/About/About';\nimport './App.css';\nimport 'tachyons';\n\n\nconst App = () => {\n\n  const [ imageValid, setImageValid ] = useState(false);\n  const [ currentUser, setCurrentUser ] = useState({\n    id: 0,\n    username: 'Guest',\n    last_entry: '',\n    entries: 0\n  });\n\n  // current image being shown\n  const [ currentImage, setCurrentImage ] = useState('');\n\n  // previous image that was analyzed\n  const [ previousImage, setPreviousImage ] = useState('');\n\n  // image address that is in the input field\n  const [ urlToRender, setUrlToRender ] = useState('');\n\n  // if image is valid, analysis can be done and themes shown\n  const [ showThemes, setShowThemes ] = useState(false);\n\n  // theme array, values set when analyze button clicked with valid image\n  const [ themeNamesValues, setThemeNamesValues ] = useState([\n    {\n      concept: '',\n      value: 0\n    },\n    {\n      concept: '',\n      value: 0\n    },\n    {\n      concept: '',\n      value: 0\n    },\n    {\n      concept: '',\n      value: 0\n    },\n    {\n      concept: '',\n      value: 0\n    }\n]);\n\n  // values for default theme array, clearing values\n  let clearTheme = [{concept: '', value: 0}, {concept: '', value: 0}, {concept: '', value: 0}, {concept: '', value: 0}, {concept: '', value: 0},];\n\n  const checkUrl = (value) => {\n    //if image showing AND analysis is already showing when checking another image address - rotate currentImage to previousImage, clear image/themes windows\n    if(imageValid && showThemes) {\n      setPreviousImage(currentImage);\n      setCurrentImage('');\n      setThemeNamesValues(clearTheme);\n      setShowThemes(false);\n    }\n    // check image attempting to be shown, if there is a width over 75, show it\n    let image = document.getElementById('imageShowing');\n    const mainInputDiv = document.getElementById('main-buffer');\n    if(image.width > 75) {\n      setImageValid(true);\n      mainInputDiv.scrollIntoView({behavior: 'smooth'});\n    } else {\n      setImageValid(false);\n    }\n  }\n\n  // clear button, reset image and theme divs/values\n  const clearField = () => {\n    let input = document.getElementById('url-input');\n    input.value = '';\n    //if image showing AND analysis is showing - rotate currentImage to previousImage\n    if(imageValid && showThemes) {\n      setPreviousImage(currentImage);\n      setCurrentImage('');\n    }\n    // back to default values\n    setImageValid(false);\n    setShowThemes(false);\n    setThemeNamesValues(clearTheme);\n  }\n\n  // if user is signed in, when logging out, send the last analyzed image to db\n  const updateEntries = (user) => {\n    let { id, last_entry } = user;\n    fetch('https://gentle-brook-34978.herokuapp.com/entries',  {\n      method: 'put',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({id: id, last_entry: last_entry })\n    })\n    .then(response => response.json())\n    .then(data => {\n      //possible future feature, utilizing local entry update\n      // setCurrentUser({...currentUser, entries: data.entries});\n    })\n    .catch(err => alert('Could not update user entry'))\n  }\n\n\n  //send pic to server for api request\n  const sendPic = (url) => {\n    fetch('https://gentle-brook-34978.herokuapp.com/analyze', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({ url: url })\n    })\n    .then(response => response.json())\n    .then(data => {\n        setThemeNamesValues(data);\n        //if window width < ...\n        const windowWidth = window.innerWidth;\n        const outputContainer = document.getElementById('output-container');\n        if(windowWidth < 1025) {\n          outputContainer.scrollIntoView({behavior: 'smooth'});\n        }\n\n        if(currentUser.username !== 'Guest') {\n          updateEntries(currentUser);\n          setCurrentUser({...currentUser, last_entry: urlToRender, entries: currentUser.entries += 1})\n        }\n        else {\n          setCurrentUser({...currentUser, entries: currentUser.entries += 1})\n        }\n    })\n    .catch(err => {\n      setShowThemes(false);\n      setImageValid(false);\n      setTimeout(() => {\n        alert('Sorry, the request could not be fulfilled');\n      }, 200)\n    })\n  }\n\n  //different user, back to default settings (user's last analyzed image, if necessary)\n  const changeUser = (user) => {\n    setPreviousImage('');\n    setImageValid(false);\n    setShowThemes(false);\n    setThemeNamesValues(clearTheme);\n    setCurrentUser(user);\n  }\n\n  // see if the image address generates a usable image\n  const checkToAnalyze = () => {\n    //check if image is valid/has been analyzed already\n    if(imageValid && !showThemes) {\n      setShowThemes(true);\n      // setCurrentUser({...currentUser, last_entry: urlToRender});\n      sendPic(urlToRender);\n      setCurrentImage(urlToRender);\n    }\n      else if(imageValid && showThemes) {\n      alert('Image already processed');\n    } else {\n      alert('Please input valid image url address')\n    }\n  }\n\n  return (\n    <div className={`app-container ${imageValid ? 'scrollable' : 'no-scroll'}`}>\n      {\n        currentUser.username === '' ?\n          <Permission changeUser={changeUser} currentUser={currentUser} setPreviousImage={setPreviousImage}/> :\n          <div>\n            <Navigation changeUser={changeUser} currentUser={currentUser} setPreviousImage={setPreviousImage}/>\n            <Greeting user={currentUser} previousImage={previousImage} checkUrl={checkUrl} setUrlToRender={setUrlToRender}/>\n            <Main checkUrl={checkUrl} clearField={clearField}  checkToAnalyze={checkToAnalyze} setUrlToRender={setUrlToRender} imageValid={imageValid}/>\n            <Output imageValid={imageValid} imageToRender={urlToRender} showThemes={showThemes} themeNamesValues={themeNamesValues}/>\n            <About />\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}